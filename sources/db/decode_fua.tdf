--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_fua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3184w[2..0]	: WIRE;
	w_anode3197w[3..0]	: WIRE;
	w_anode3214w[3..0]	: WIRE;
	w_anode3224w[3..0]	: WIRE;
	w_anode3234w[3..0]	: WIRE;
	w_anode3244w[3..0]	: WIRE;
	w_anode3254w[3..0]	: WIRE;
	w_anode3264w[3..0]	: WIRE;
	w_anode3274w[3..0]	: WIRE;
	w_anode3286w[2..0]	: WIRE;
	w_anode3295w[3..0]	: WIRE;
	w_anode3306w[3..0]	: WIRE;
	w_anode3316w[3..0]	: WIRE;
	w_anode3326w[3..0]	: WIRE;
	w_anode3336w[3..0]	: WIRE;
	w_anode3346w[3..0]	: WIRE;
	w_anode3356w[3..0]	: WIRE;
	w_anode3366w[3..0]	: WIRE;
	w_anode3377w[2..0]	: WIRE;
	w_anode3386w[3..0]	: WIRE;
	w_anode3397w[3..0]	: WIRE;
	w_anode3407w[3..0]	: WIRE;
	w_anode3417w[3..0]	: WIRE;
	w_anode3427w[3..0]	: WIRE;
	w_anode3437w[3..0]	: WIRE;
	w_anode3447w[3..0]	: WIRE;
	w_anode3457w[3..0]	: WIRE;
	w_anode3468w[2..0]	: WIRE;
	w_anode3477w[3..0]	: WIRE;
	w_anode3488w[3..0]	: WIRE;
	w_anode3498w[3..0]	: WIRE;
	w_anode3508w[3..0]	: WIRE;
	w_anode3518w[3..0]	: WIRE;
	w_anode3528w[3..0]	: WIRE;
	w_anode3538w[3..0]	: WIRE;
	w_anode3548w[3..0]	: WIRE;
	w_data3182w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode3548w[3..3], w_anode3538w[3..3], w_anode3528w[3..3], w_anode3518w[3..3], w_anode3508w[3..3], w_anode3498w[3..3], w_anode3488w[3..3], w_anode3477w[3..3]), ( w_anode3457w[3..3], w_anode3447w[3..3], w_anode3437w[3..3], w_anode3427w[3..3], w_anode3417w[3..3], w_anode3407w[3..3], w_anode3397w[3..3], w_anode3386w[3..3]), ( w_anode3366w[3..3], w_anode3356w[3..3], w_anode3346w[3..3], w_anode3336w[3..3], w_anode3326w[3..3], w_anode3316w[3..3], w_anode3306w[3..3], w_anode3295w[3..3]), ( w_anode3274w[3..3], w_anode3264w[3..3], w_anode3254w[3..3], w_anode3244w[3..3], w_anode3234w[3..3], w_anode3224w[3..3], w_anode3214w[3..3], w_anode3197w[3..3]));
	w_anode3184w[] = ( (w_anode3184w[1..1] & (! data_wire[4..4])), (w_anode3184w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3197w[] = ( (w_anode3197w[2..2] & (! w_data3182w[2..2])), (w_anode3197w[1..1] & (! w_data3182w[1..1])), (w_anode3197w[0..0] & (! w_data3182w[0..0])), w_anode3184w[2..2]);
	w_anode3214w[] = ( (w_anode3214w[2..2] & (! w_data3182w[2..2])), (w_anode3214w[1..1] & (! w_data3182w[1..1])), (w_anode3214w[0..0] & w_data3182w[0..0]), w_anode3184w[2..2]);
	w_anode3224w[] = ( (w_anode3224w[2..2] & (! w_data3182w[2..2])), (w_anode3224w[1..1] & w_data3182w[1..1]), (w_anode3224w[0..0] & (! w_data3182w[0..0])), w_anode3184w[2..2]);
	w_anode3234w[] = ( (w_anode3234w[2..2] & (! w_data3182w[2..2])), (w_anode3234w[1..1] & w_data3182w[1..1]), (w_anode3234w[0..0] & w_data3182w[0..0]), w_anode3184w[2..2]);
	w_anode3244w[] = ( (w_anode3244w[2..2] & w_data3182w[2..2]), (w_anode3244w[1..1] & (! w_data3182w[1..1])), (w_anode3244w[0..0] & (! w_data3182w[0..0])), w_anode3184w[2..2]);
	w_anode3254w[] = ( (w_anode3254w[2..2] & w_data3182w[2..2]), (w_anode3254w[1..1] & (! w_data3182w[1..1])), (w_anode3254w[0..0] & w_data3182w[0..0]), w_anode3184w[2..2]);
	w_anode3264w[] = ( (w_anode3264w[2..2] & w_data3182w[2..2]), (w_anode3264w[1..1] & w_data3182w[1..1]), (w_anode3264w[0..0] & (! w_data3182w[0..0])), w_anode3184w[2..2]);
	w_anode3274w[] = ( (w_anode3274w[2..2] & w_data3182w[2..2]), (w_anode3274w[1..1] & w_data3182w[1..1]), (w_anode3274w[0..0] & w_data3182w[0..0]), w_anode3184w[2..2]);
	w_anode3286w[] = ( (w_anode3286w[1..1] & (! data_wire[4..4])), (w_anode3286w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3295w[] = ( (w_anode3295w[2..2] & (! w_data3182w[2..2])), (w_anode3295w[1..1] & (! w_data3182w[1..1])), (w_anode3295w[0..0] & (! w_data3182w[0..0])), w_anode3286w[2..2]);
	w_anode3306w[] = ( (w_anode3306w[2..2] & (! w_data3182w[2..2])), (w_anode3306w[1..1] & (! w_data3182w[1..1])), (w_anode3306w[0..0] & w_data3182w[0..0]), w_anode3286w[2..2]);
	w_anode3316w[] = ( (w_anode3316w[2..2] & (! w_data3182w[2..2])), (w_anode3316w[1..1] & w_data3182w[1..1]), (w_anode3316w[0..0] & (! w_data3182w[0..0])), w_anode3286w[2..2]);
	w_anode3326w[] = ( (w_anode3326w[2..2] & (! w_data3182w[2..2])), (w_anode3326w[1..1] & w_data3182w[1..1]), (w_anode3326w[0..0] & w_data3182w[0..0]), w_anode3286w[2..2]);
	w_anode3336w[] = ( (w_anode3336w[2..2] & w_data3182w[2..2]), (w_anode3336w[1..1] & (! w_data3182w[1..1])), (w_anode3336w[0..0] & (! w_data3182w[0..0])), w_anode3286w[2..2]);
	w_anode3346w[] = ( (w_anode3346w[2..2] & w_data3182w[2..2]), (w_anode3346w[1..1] & (! w_data3182w[1..1])), (w_anode3346w[0..0] & w_data3182w[0..0]), w_anode3286w[2..2]);
	w_anode3356w[] = ( (w_anode3356w[2..2] & w_data3182w[2..2]), (w_anode3356w[1..1] & w_data3182w[1..1]), (w_anode3356w[0..0] & (! w_data3182w[0..0])), w_anode3286w[2..2]);
	w_anode3366w[] = ( (w_anode3366w[2..2] & w_data3182w[2..2]), (w_anode3366w[1..1] & w_data3182w[1..1]), (w_anode3366w[0..0] & w_data3182w[0..0]), w_anode3286w[2..2]);
	w_anode3377w[] = ( (w_anode3377w[1..1] & data_wire[4..4]), (w_anode3377w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3386w[] = ( (w_anode3386w[2..2] & (! w_data3182w[2..2])), (w_anode3386w[1..1] & (! w_data3182w[1..1])), (w_anode3386w[0..0] & (! w_data3182w[0..0])), w_anode3377w[2..2]);
	w_anode3397w[] = ( (w_anode3397w[2..2] & (! w_data3182w[2..2])), (w_anode3397w[1..1] & (! w_data3182w[1..1])), (w_anode3397w[0..0] & w_data3182w[0..0]), w_anode3377w[2..2]);
	w_anode3407w[] = ( (w_anode3407w[2..2] & (! w_data3182w[2..2])), (w_anode3407w[1..1] & w_data3182w[1..1]), (w_anode3407w[0..0] & (! w_data3182w[0..0])), w_anode3377w[2..2]);
	w_anode3417w[] = ( (w_anode3417w[2..2] & (! w_data3182w[2..2])), (w_anode3417w[1..1] & w_data3182w[1..1]), (w_anode3417w[0..0] & w_data3182w[0..0]), w_anode3377w[2..2]);
	w_anode3427w[] = ( (w_anode3427w[2..2] & w_data3182w[2..2]), (w_anode3427w[1..1] & (! w_data3182w[1..1])), (w_anode3427w[0..0] & (! w_data3182w[0..0])), w_anode3377w[2..2]);
	w_anode3437w[] = ( (w_anode3437w[2..2] & w_data3182w[2..2]), (w_anode3437w[1..1] & (! w_data3182w[1..1])), (w_anode3437w[0..0] & w_data3182w[0..0]), w_anode3377w[2..2]);
	w_anode3447w[] = ( (w_anode3447w[2..2] & w_data3182w[2..2]), (w_anode3447w[1..1] & w_data3182w[1..1]), (w_anode3447w[0..0] & (! w_data3182w[0..0])), w_anode3377w[2..2]);
	w_anode3457w[] = ( (w_anode3457w[2..2] & w_data3182w[2..2]), (w_anode3457w[1..1] & w_data3182w[1..1]), (w_anode3457w[0..0] & w_data3182w[0..0]), w_anode3377w[2..2]);
	w_anode3468w[] = ( (w_anode3468w[1..1] & data_wire[4..4]), (w_anode3468w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3477w[] = ( (w_anode3477w[2..2] & (! w_data3182w[2..2])), (w_anode3477w[1..1] & (! w_data3182w[1..1])), (w_anode3477w[0..0] & (! w_data3182w[0..0])), w_anode3468w[2..2]);
	w_anode3488w[] = ( (w_anode3488w[2..2] & (! w_data3182w[2..2])), (w_anode3488w[1..1] & (! w_data3182w[1..1])), (w_anode3488w[0..0] & w_data3182w[0..0]), w_anode3468w[2..2]);
	w_anode3498w[] = ( (w_anode3498w[2..2] & (! w_data3182w[2..2])), (w_anode3498w[1..1] & w_data3182w[1..1]), (w_anode3498w[0..0] & (! w_data3182w[0..0])), w_anode3468w[2..2]);
	w_anode3508w[] = ( (w_anode3508w[2..2] & (! w_data3182w[2..2])), (w_anode3508w[1..1] & w_data3182w[1..1]), (w_anode3508w[0..0] & w_data3182w[0..0]), w_anode3468w[2..2]);
	w_anode3518w[] = ( (w_anode3518w[2..2] & w_data3182w[2..2]), (w_anode3518w[1..1] & (! w_data3182w[1..1])), (w_anode3518w[0..0] & (! w_data3182w[0..0])), w_anode3468w[2..2]);
	w_anode3528w[] = ( (w_anode3528w[2..2] & w_data3182w[2..2]), (w_anode3528w[1..1] & (! w_data3182w[1..1])), (w_anode3528w[0..0] & w_data3182w[0..0]), w_anode3468w[2..2]);
	w_anode3538w[] = ( (w_anode3538w[2..2] & w_data3182w[2..2]), (w_anode3538w[1..1] & w_data3182w[1..1]), (w_anode3538w[0..0] & (! w_data3182w[0..0])), w_anode3468w[2..2]);
	w_anode3548w[] = ( (w_anode3548w[2..2] & w_data3182w[2..2]), (w_anode3548w[1..1] & w_data3182w[1..1]), (w_anode3548w[0..0] & w_data3182w[0..0]), w_anode3468w[2..2]);
	w_data3182w[2..0] = data_wire[2..0];
END;
--VALID FILE
