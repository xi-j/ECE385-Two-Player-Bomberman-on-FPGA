--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_8aa
( 
	data[4..0]	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3562w[2..0]	: WIRE;
	w_anode3576w[3..0]	: WIRE;
	w_anode3593w[3..0]	: WIRE;
	w_anode3603w[3..0]	: WIRE;
	w_anode3613w[3..0]	: WIRE;
	w_anode3623w[3..0]	: WIRE;
	w_anode3633w[3..0]	: WIRE;
	w_anode3643w[3..0]	: WIRE;
	w_anode3653w[3..0]	: WIRE;
	w_anode3665w[2..0]	: WIRE;
	w_anode3675w[3..0]	: WIRE;
	w_anode3686w[3..0]	: WIRE;
	w_anode3696w[3..0]	: WIRE;
	w_anode3706w[3..0]	: WIRE;
	w_anode3716w[3..0]	: WIRE;
	w_anode3726w[3..0]	: WIRE;
	w_anode3736w[3..0]	: WIRE;
	w_anode3746w[3..0]	: WIRE;
	w_anode3757w[2..0]	: WIRE;
	w_anode3767w[3..0]	: WIRE;
	w_anode3778w[3..0]	: WIRE;
	w_anode3788w[3..0]	: WIRE;
	w_anode3798w[3..0]	: WIRE;
	w_anode3808w[3..0]	: WIRE;
	w_anode3818w[3..0]	: WIRE;
	w_anode3828w[3..0]	: WIRE;
	w_anode3838w[3..0]	: WIRE;
	w_anode3849w[2..0]	: WIRE;
	w_anode3859w[3..0]	: WIRE;
	w_anode3870w[3..0]	: WIRE;
	w_anode3880w[3..0]	: WIRE;
	w_anode3890w[3..0]	: WIRE;
	w_anode3900w[3..0]	: WIRE;
	w_anode3910w[3..0]	: WIRE;
	w_anode3920w[3..0]	: WIRE;
	w_anode3930w[3..0]	: WIRE;
	w_data3560w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode3930w[3..3], w_anode3920w[3..3], w_anode3910w[3..3], w_anode3900w[3..3], w_anode3890w[3..3], w_anode3880w[3..3], w_anode3870w[3..3], w_anode3859w[3..3]), ( w_anode3838w[3..3], w_anode3828w[3..3], w_anode3818w[3..3], w_anode3808w[3..3], w_anode3798w[3..3], w_anode3788w[3..3], w_anode3778w[3..3], w_anode3767w[3..3]), ( w_anode3746w[3..3], w_anode3736w[3..3], w_anode3726w[3..3], w_anode3716w[3..3], w_anode3706w[3..3], w_anode3696w[3..3], w_anode3686w[3..3], w_anode3675w[3..3]), ( w_anode3653w[3..3], w_anode3643w[3..3], w_anode3633w[3..3], w_anode3623w[3..3], w_anode3613w[3..3], w_anode3603w[3..3], w_anode3593w[3..3], w_anode3576w[3..3]));
	w_anode3562w[] = ( (w_anode3562w[1..1] & (! data_wire[4..4])), (w_anode3562w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3576w[] = ( (w_anode3576w[2..2] & (! w_data3560w[2..2])), (w_anode3576w[1..1] & (! w_data3560w[1..1])), (w_anode3576w[0..0] & (! w_data3560w[0..0])), w_anode3562w[2..2]);
	w_anode3593w[] = ( (w_anode3593w[2..2] & (! w_data3560w[2..2])), (w_anode3593w[1..1] & (! w_data3560w[1..1])), (w_anode3593w[0..0] & w_data3560w[0..0]), w_anode3562w[2..2]);
	w_anode3603w[] = ( (w_anode3603w[2..2] & (! w_data3560w[2..2])), (w_anode3603w[1..1] & w_data3560w[1..1]), (w_anode3603w[0..0] & (! w_data3560w[0..0])), w_anode3562w[2..2]);
	w_anode3613w[] = ( (w_anode3613w[2..2] & (! w_data3560w[2..2])), (w_anode3613w[1..1] & w_data3560w[1..1]), (w_anode3613w[0..0] & w_data3560w[0..0]), w_anode3562w[2..2]);
	w_anode3623w[] = ( (w_anode3623w[2..2] & w_data3560w[2..2]), (w_anode3623w[1..1] & (! w_data3560w[1..1])), (w_anode3623w[0..0] & (! w_data3560w[0..0])), w_anode3562w[2..2]);
	w_anode3633w[] = ( (w_anode3633w[2..2] & w_data3560w[2..2]), (w_anode3633w[1..1] & (! w_data3560w[1..1])), (w_anode3633w[0..0] & w_data3560w[0..0]), w_anode3562w[2..2]);
	w_anode3643w[] = ( (w_anode3643w[2..2] & w_data3560w[2..2]), (w_anode3643w[1..1] & w_data3560w[1..1]), (w_anode3643w[0..0] & (! w_data3560w[0..0])), w_anode3562w[2..2]);
	w_anode3653w[] = ( (w_anode3653w[2..2] & w_data3560w[2..2]), (w_anode3653w[1..1] & w_data3560w[1..1]), (w_anode3653w[0..0] & w_data3560w[0..0]), w_anode3562w[2..2]);
	w_anode3665w[] = ( (w_anode3665w[1..1] & (! data_wire[4..4])), (w_anode3665w[0..0] & data_wire[3..3]), B"1");
	w_anode3675w[] = ( (w_anode3675w[2..2] & (! w_data3560w[2..2])), (w_anode3675w[1..1] & (! w_data3560w[1..1])), (w_anode3675w[0..0] & (! w_data3560w[0..0])), w_anode3665w[2..2]);
	w_anode3686w[] = ( (w_anode3686w[2..2] & (! w_data3560w[2..2])), (w_anode3686w[1..1] & (! w_data3560w[1..1])), (w_anode3686w[0..0] & w_data3560w[0..0]), w_anode3665w[2..2]);
	w_anode3696w[] = ( (w_anode3696w[2..2] & (! w_data3560w[2..2])), (w_anode3696w[1..1] & w_data3560w[1..1]), (w_anode3696w[0..0] & (! w_data3560w[0..0])), w_anode3665w[2..2]);
	w_anode3706w[] = ( (w_anode3706w[2..2] & (! w_data3560w[2..2])), (w_anode3706w[1..1] & w_data3560w[1..1]), (w_anode3706w[0..0] & w_data3560w[0..0]), w_anode3665w[2..2]);
	w_anode3716w[] = ( (w_anode3716w[2..2] & w_data3560w[2..2]), (w_anode3716w[1..1] & (! w_data3560w[1..1])), (w_anode3716w[0..0] & (! w_data3560w[0..0])), w_anode3665w[2..2]);
	w_anode3726w[] = ( (w_anode3726w[2..2] & w_data3560w[2..2]), (w_anode3726w[1..1] & (! w_data3560w[1..1])), (w_anode3726w[0..0] & w_data3560w[0..0]), w_anode3665w[2..2]);
	w_anode3736w[] = ( (w_anode3736w[2..2] & w_data3560w[2..2]), (w_anode3736w[1..1] & w_data3560w[1..1]), (w_anode3736w[0..0] & (! w_data3560w[0..0])), w_anode3665w[2..2]);
	w_anode3746w[] = ( (w_anode3746w[2..2] & w_data3560w[2..2]), (w_anode3746w[1..1] & w_data3560w[1..1]), (w_anode3746w[0..0] & w_data3560w[0..0]), w_anode3665w[2..2]);
	w_anode3757w[] = ( (w_anode3757w[1..1] & data_wire[4..4]), (w_anode3757w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3767w[] = ( (w_anode3767w[2..2] & (! w_data3560w[2..2])), (w_anode3767w[1..1] & (! w_data3560w[1..1])), (w_anode3767w[0..0] & (! w_data3560w[0..0])), w_anode3757w[2..2]);
	w_anode3778w[] = ( (w_anode3778w[2..2] & (! w_data3560w[2..2])), (w_anode3778w[1..1] & (! w_data3560w[1..1])), (w_anode3778w[0..0] & w_data3560w[0..0]), w_anode3757w[2..2]);
	w_anode3788w[] = ( (w_anode3788w[2..2] & (! w_data3560w[2..2])), (w_anode3788w[1..1] & w_data3560w[1..1]), (w_anode3788w[0..0] & (! w_data3560w[0..0])), w_anode3757w[2..2]);
	w_anode3798w[] = ( (w_anode3798w[2..2] & (! w_data3560w[2..2])), (w_anode3798w[1..1] & w_data3560w[1..1]), (w_anode3798w[0..0] & w_data3560w[0..0]), w_anode3757w[2..2]);
	w_anode3808w[] = ( (w_anode3808w[2..2] & w_data3560w[2..2]), (w_anode3808w[1..1] & (! w_data3560w[1..1])), (w_anode3808w[0..0] & (! w_data3560w[0..0])), w_anode3757w[2..2]);
	w_anode3818w[] = ( (w_anode3818w[2..2] & w_data3560w[2..2]), (w_anode3818w[1..1] & (! w_data3560w[1..1])), (w_anode3818w[0..0] & w_data3560w[0..0]), w_anode3757w[2..2]);
	w_anode3828w[] = ( (w_anode3828w[2..2] & w_data3560w[2..2]), (w_anode3828w[1..1] & w_data3560w[1..1]), (w_anode3828w[0..0] & (! w_data3560w[0..0])), w_anode3757w[2..2]);
	w_anode3838w[] = ( (w_anode3838w[2..2] & w_data3560w[2..2]), (w_anode3838w[1..1] & w_data3560w[1..1]), (w_anode3838w[0..0] & w_data3560w[0..0]), w_anode3757w[2..2]);
	w_anode3849w[] = ( (w_anode3849w[1..1] & data_wire[4..4]), (w_anode3849w[0..0] & data_wire[3..3]), B"1");
	w_anode3859w[] = ( (w_anode3859w[2..2] & (! w_data3560w[2..2])), (w_anode3859w[1..1] & (! w_data3560w[1..1])), (w_anode3859w[0..0] & (! w_data3560w[0..0])), w_anode3849w[2..2]);
	w_anode3870w[] = ( (w_anode3870w[2..2] & (! w_data3560w[2..2])), (w_anode3870w[1..1] & (! w_data3560w[1..1])), (w_anode3870w[0..0] & w_data3560w[0..0]), w_anode3849w[2..2]);
	w_anode3880w[] = ( (w_anode3880w[2..2] & (! w_data3560w[2..2])), (w_anode3880w[1..1] & w_data3560w[1..1]), (w_anode3880w[0..0] & (! w_data3560w[0..0])), w_anode3849w[2..2]);
	w_anode3890w[] = ( (w_anode3890w[2..2] & (! w_data3560w[2..2])), (w_anode3890w[1..1] & w_data3560w[1..1]), (w_anode3890w[0..0] & w_data3560w[0..0]), w_anode3849w[2..2]);
	w_anode3900w[] = ( (w_anode3900w[2..2] & w_data3560w[2..2]), (w_anode3900w[1..1] & (! w_data3560w[1..1])), (w_anode3900w[0..0] & (! w_data3560w[0..0])), w_anode3849w[2..2]);
	w_anode3910w[] = ( (w_anode3910w[2..2] & w_data3560w[2..2]), (w_anode3910w[1..1] & (! w_data3560w[1..1])), (w_anode3910w[0..0] & w_data3560w[0..0]), w_anode3849w[2..2]);
	w_anode3920w[] = ( (w_anode3920w[2..2] & w_data3560w[2..2]), (w_anode3920w[1..1] & w_data3560w[1..1]), (w_anode3920w[0..0] & (! w_data3560w[0..0])), w_anode3849w[2..2]);
	w_anode3930w[] = ( (w_anode3930w[2..2] & w_data3560w[2..2]), (w_anode3930w[1..1] & w_data3560w[1..1]), (w_anode3930w[0..0] & w_data3560w[0..0]), w_anode3849w[2..2]);
	w_data3560w[2..0] = data_wire[2..0];
END;
--VALID FILE
